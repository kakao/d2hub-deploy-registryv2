worker_processes  16;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  180;

    upstream index-registry {
        server 172.31.26.50:5002;
    }

    upstream mirror-registry {
        server 172.31.26.50:31701;
    }

    upstream index-api-registry {
        server 172.31.26.50:7000;
    }

    upstream docker-auth-server {
        server 172.31.26.50:5001;
    }

    upstream v1-index-registry {
        server 172.31.26.50:7000;
    }

    upstream v1-mirror-registry {
        server 172.31.26.50:31901;
    }

    ## Set a variable to help us decide if we need to add the
    ## 'Docker-Distribution-Api-Version' header.
    ## The registry always sets this header.
    ## In the case of nginx performing auth, the header will be unset
    ## since nginx is auth-ing before proxying.
    map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
        'registry/2.0' '';
        default registry/2.0;
    }

    ## d2hub.com ##
    server {
        listen       443 ssl;
        #server_name  i.d2hub.com;
        server_name  d2hub.com;

        ssl_certificate      /etc/ssl/certs/d2hub.com.cert;
        ssl_certificate_key  /etc/ssl/private/d2hub.com.key;
        
        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
        chunked_transfer_encoding on;

        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                return 404;
            }

            ## If  is empty, the header will not be added.
            ## See the map directive above where this variable is defined.
            add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

            proxy_pass                          http://index-registry;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }

        # location / {

        #     if ($request_method !~ ^(GET|HEAD)$ ) {
        #         return 403;
        #     }

        #     proxy_pass                          http://v1-index-registry;
        #     proxy_set_header  Host              $http_host;   # required for docker client's sake
        #     proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
        #     proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        #     proxy_set_header  X-Forwarded-Proto $scheme;
        #     # proxy_set_header  Authorization     ""; # For basic auth through nginx in v1 to work, please comment this line
        #     proxy_read_timeout                  900;        
        # }

        location = /health_check.html {
            root         /usr/share/nginx/html;
            access_log   off;
        }
    }

    server {
        listen       443 ssl;
        #server_name  m.d2hub.com;
        server_name  d2hub.com;

        ssl_certificate      /etc/ssl/certs/d2hub.com.cert;
        ssl_certificate_key  /etc/ssl/private/d2hub.com.key;

        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
        chunked_transfer_encoding on;

        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                return 404;
            }

            if ($request_method !~ ^(GET|HEAD)$ ) {
                return 403;
            }

            rewrite ^/v2/([^/]+)/(manifests|blobs)/(.+)$ /v2/library/$1/$2/$3 break;
            rewrite_log on;

            ## If  is empty, the header will not be added.
            ## See the map directive above where this variable is defined.
            add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

            proxy_pass                          http://mirror-registry;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }

        # location / {

        #     if ($request_method !~ ^(GET|HEAD)$ ) {
        #         return 403;
        #     }

        #     proxy_pass                          http://v1-mirror-registry;
        #     proxy_set_header  Host              $http_host;   # required for docker client's sake
        #     proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
        #     proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        #     proxy_set_header  X-Forwarded-Proto $scheme;
        #     # proxy_set_header  Authorization     ""; # For basic auth through nginx in v1 to work, please comment this line
        #     proxy_read_timeout                  900;        
        # }

        location = /health_check.html {
            root         /usr/share/nginx/html;
            access_log   off;
        }
    }

    ## api-docker-registry.d2hub.com - to use API for d2hub ##
    server {
        listen 443 ssl;
        server_name api-docker-registry.d2hub.com;

        # SSL
        ssl_certificate /etc/ssl/certs/d2hub.com.cert;
        ssl_certificate_key /etc/ssl/private/d2hub.com.key;

        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
        chunked_transfer_encoding on;

        location /v2/ {
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
                return 404;
            }

            # # To add basic authentication to v2 use auth_basic setting.
            auth_basic "Registry realm";
            auth_basic_user_file /etc/nginx/conf.d/nginx.htpasswd;

            ## If  is empty, the header will not be added.
            ## See the map directive above where this variable is defined.
            add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

            proxy_pass                          http://index-api-registry;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;
        }

        location = /health_check.html {
            root         /usr/share/nginx/html;
            access_log   off;
        }
    }

    ## docker-auth-server
    server {
        listen       443 ssl;
        server_name  docker-auth.d2hub.com;

        ssl_certificate      /etc/ssl/certs/d2hub.com.cert;
        ssl_certificate_key  /etc/ssl/private/d2hub.com.key;
        
        # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;

        location / {
            proxy_pass                          http://docker-auth-server;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_read_timeout                  900;        
        }
    }
}
